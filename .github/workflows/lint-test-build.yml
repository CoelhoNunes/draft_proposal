name: Lint, Test & Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8.15.0'

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Create Python virtual environment
        run: |
          python3 -m venv .venv
          .venv/bin/python -m pip install --upgrade pip

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint packages
        run: pnpm run lint

      - name: Type check packages
        run: pnpm run typecheck

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Create Python virtual environment
        run: |
          python3 -m venv .venv
          .venv/bin/python -m pip install --upgrade pip

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build workspace packages
        run: pnpm -w -r build

      - name: Run microtech API tests
        run: pnpm --filter microtech-api test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Create Python virtual environment
        run: |
          python3 -m venv .venv
          .venv/bin/python -m pip install --upgrade pip

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Upload Web App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-app
          path: apps/web/dist

      - name: Upload API App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-app
          path: apps/api/dist